name: master

on:
  # schedule:
  #   - cron: '*/15 * * * *'
  workflow_dispatch:
    inputs:
      testParam:
        description: 'Test parameter'     
        required: true
        default: '1'
  push:
    branches:
      - master

jobs:
  run_master:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ 'windows-latest' ]
        python-version: [ 'pypy-3.7', 'pypy-3.7-v7.x' ]
    # name: Python ${{ matrix.python-version }} - ${{ matrix.os }}

# jobs:     
#   go-test:
#     uses: vsafonkin/sample-go/.github/workflows/go.yml@main
#     with:
#       go-version: "1.17.7"

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    # - run: nuget help
    # - run: sudo nuget update -self
    # - run: nuget help

    # - uses: actions/setup-node@v3
    #   with:
    #     node-version: lts/carbon

    # - run: node --version


    # - uses: actions/setup-go@v3
    #   with:
    #     go-version: '1.17'
    #     # check-latest: true

    # - run: go version

    # - run: brew install tcl-tk

    - run: python --version

    - name: Install poetry
      run: pipx install poetry

    - run: poetry config --list

    - name: Setup Python
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
        # cache: poetry

    - run: python --version
    - run: pipx list

    - name: Init pyproject.toml
      run: poetry init -n
    # - run: |
    #    poetry env use $env:pythonLocation\python.exe

    - run: Get-Content pyproject.toml


    - name: Install dependencies
      run: poetry add flake8 --python 3.7

    - run: ls C:\Users\runneradmin\AppData\Local\pypoetry\Cache\virtualenvs

    # - run: ls -la /Users/runner/hostedtoolcache/Python/3.7.13/x64/lib/python3.7

    # - run: echo 'export PATH="/usr/local/opt/tcl-tk/bin:$PATH"' >> /Users/runner/.bash_profile

    # - run: |
    #     python ./sample.py
    #   env:
    #     PKG_CONFIG_PATH: '/usr/local/opt/tcl-tk/lib/pkgconfig'

    # - name: Run sample code
    #   run: |
    #     python ./sample.py

        

    # - name: Setup dotnet from global.json
    #   uses: actions/setup-dotnet@v2
        
    # - name: Setup dotnet multiple lines
    #   uses: actions/setup-dotnet@430f78fc13b1169a1f62d84a45dcf6816eb95fca
    #   with:
    #     dotnet-version: |
    #       3.1.*
    #       5.0
          
    # - name: Setup dotnet
    #   uses: actions/setup-dotnet@v2
    #   with:
    #     dotnet-version: '6.0.x'
          
    # - run: dotnet --info
    # - run: dotnet test
    
    # - uses: actions/setup-java@v1
    #   with:
    #     java-version: '17'
        
    # - name: Setup Go environment
    #   uses: actions/setup-go@v3
    #   with:
    #     go-version: '>=1.17.0'
        
    # - run: go version
        
    # - run: cp -f `which go` /usr/bin/go
    # - run: sudo go version        
