name: master

on:
  # schedule:
  #   - cron: '*/15 * * * *'
  workflow_dispatch:
    inputs:
      testParam:
        description: 'Test parameter'     
        required: true
        default: '1'
  push:
    branches:
      - master

jobs:
  run_master:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
        python-version: [ '3.7', '3.9', 'pypy-3.7-v7.x' ]
# jobs:     
#   go-test:
#     uses: vsafonkin/sample-go/.github/workflows/go.yml@main
#     with:
#       go-version: "1.17.7"

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Setup Python
      uses: actions/setup-python@main
      with:
        python-version: ${{ matrix.python-version }}
        # cache: 'pipenv'

    # - name: Install dependencies
    #   run: pip install -r requirements.txt

    - name: Install pipenv
      run: pipx install pipenv

    # - name: Update Pipfile and Pipfile.lock
    #   run: pipenv update

    - name: Install dependencies
      run: pipenv install numpy

    - run: python --version
    - run: cat Pipfile
    - run: cat Pipfile.lock

    # - name: Run python sample
    #   run: python3 ./sample.py
        
    # - name: Test 
    #   run: ./Test.ps1
        
    # - name: Set up Python
    #   uses: actions/setup-python@v3
    #   with:
    #     python-version: ${{ matrix.python }}
        
    # - name: venv activate Linux
    #   if: ${{ matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest' }}
    #   run: |
    #     mkdir test-venv
    #     cd test-venv
    #     python -m venv .
    #     source ./bin/activate
    #     echo "VIRTUAL_ENV: $VIRTUAL_ENV"
        
    # - name: venv activate Windows
    #   if: ${{ matrix.os == 'windows-latest' }}
    #   run: |
    #     mkdir test-venv
    #     cd test-venv
    #     python -m venv .
    #     ./Scripts/Activate.ps1
    #     Write-Host "VIRTUAL_ENV: $env:VIRTUAL_ENV"
        

    # - name: Setup dotnet from global.json
    #   uses: actions/setup-dotnet@v2
        
    # - name: Setup dotnet multiple lines
    #   uses: actions/setup-dotnet@v2
    #   with:
    #     dotnet-version: |
    #       3.1.*
    #       5.0
    #       6.0.x
          
    # - name: Setup dotnet prerelease
    #   uses: actions/setup-dotnet@v2
    #   with:
    #     dotnet-version: "7.0"
    #     include-prerelease: true
          
    # - run: dotnet --info
    
    # - uses: actions/setup-java@v1
    #   with:
    #     java-version: '17'
        
    # - name: Setup Go environment
    #   uses: actions/setup-go@v3
    #   with:
    #     go-version: '>=1.17.0'
        
    # - run: go version
        
    # - run: cp -f `which go` /usr/bin/go
    # - run: sudo go version        
